{"ast":null,"code":"var _jsxFileName = \"/home/ruart/Desktop/SocialMedia100/client/src/Components/Profile.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport GetFriendList from './GetFriendList.js';\nimport GetPosts from './GetPosts.js';\n\nconst qs = require(\"query-string\");\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userId: qs.parse(this.props.location.search, {\n        ignoreQueryPrefix: true\n      }).userId,\n      username: '',\n      name: '',\n      email: '',\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    var id = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true\n    }).userId;\n    console.log(id);\n\n    if (localStorage.usertoken) {\n      var token = localStorage.usertoken;\n      var decoded = jwt_decode(token);\n\n      if (decoded.userId === id) {\n        this.setState({\n          userId: decoded.userId,\n          username: decoded.username,\n          name: decoded.name,\n          email: decoded.email\n        });\n      } else {\n        fetch('http://localhost:3000/get-user/?userId=' + id).then(response => {\n          return response.json();\n        }).then(res => {\n          this.setState({\n            userId: id,\n            username: res.result[0].username,\n            name: res.result[0].name,\n            email: res.result[0].email\n          });\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    } else {\n      alert(\"Login to access page\");\n      this.props.history.push(\"/\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    window.location.reload();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"pdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"ptable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.username), React.createElement(\"tr\", {\n      className: \"ptr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.name)), React.createElement(\"tr\", {\n      className: \"ptr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.email)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      className: \"ptr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(GetFriendList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(GetPosts, {\n      value: this.state.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/home/ruart/Desktop/SocialMedia100/client/src/Components/Profile.js"],"names":["React","Component","Link","jwt_decode","GetFriendList","GetPosts","qs","require","Profile","constructor","state","userId","parse","props","location","search","ignoreQueryPrefix","username","name","email","posts","componentDidMount","id","console","log","localStorage","usertoken","token","decoded","setState","fetch","then","response","json","res","result","catch","e","alert","history","push","componentWillReceiveProps","nextProps","window","reload","render"],"mappings":"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","sourcesContent":["import React, {Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport jwt_decode from 'jwt-decode'\nimport GetFriendList from './GetFriendList.js'\nimport GetPosts from './GetPosts.js'\n\nconst qs = require(\"query-string\")\n\n\nclass Profile extends Component {\n    constructor() {\n        super()\n        this.state = {\n            userId: qs.parse(this.props.location.search, {ignoreQueryPrefix: true}).userId,\n            username: '',\n            name: '',\n            email: '',\n            posts: []\n        }\n    }\n\n    componentDidMount () {\n        var id = qs.parse(this.props.location.search, {ignoreQueryPrefix: true}).userId\n        console.log(id)\n            if(localStorage.usertoken){\n                var token = localStorage.usertoken\n                var decoded = jwt_decode(token)\n                if(decoded.userId === id){\n                    this.setState({\n                        userId: decoded.userId,\n                        username: decoded.username,\n                        name: decoded.name,\n                        email: decoded.email\n                    })\n                }else{\n                    fetch('http://localhost:3000/get-user/?userId='+id)\n                    .then((response) => { return response.json() })\n                    .then((res) => {\n                        this.setState({\n                            userId: id,\n                            username: res.result[0].username,\n                            name: res.result[0].name,\n                            email: res.result[0].email\n                        })\n                    })\n                    .catch((e) => { console.log(e)});        \n                }\n\n\n            }else{\n                alert(\"Login to access page\")\n                this.props.history.push(`/`)\n\n            }\n    }\n\n    componentWillReceiveProps(nextProps){\n           window.location.reload()\n    }\n\n\n    render () { \n        return ( \n            <div className=\"pdiv\">\n                    <table className=\"ptable\">\n                    <tr>{this.state.username}</tr>\n                        <tr className=\"ptr\">\n                            <td>{this.state.name}</td>\n                        </tr>\n                        <tr className=\"ptr\">\n                            <td>{this.state.email}</td>\n                        </tr>\n                        <tr><td><br/></td></tr>\n                        <tr className=\"ptr\">\n                        </tr>\n                    </table>\n                    <GetFriendList/>\n                    <GetPosts value = {this.state.userId}/>\n            </div>\n        )\n    }\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}