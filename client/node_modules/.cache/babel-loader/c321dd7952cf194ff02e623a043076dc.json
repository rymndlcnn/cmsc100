{"ast":null,"code":"var _jsxFileName = \"/home/ruart/Desktop/SocialMedia100/client/src/Components/GetFriendList.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n\nclass GetFriendList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userId: 0,\n      friends: []\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.usertoken) {\n      var token = localStorage.usertoken;\n      var decoded = jwt_decode(token);\n      this.setState({\n        userId: decoded.userId\n      });\n      fetch('http://localhost:3000/get-friends/?userId=' + decoded.userId).then(response => {\n        return response.json();\n      }).then(result => {\n        console.log(result);\n        this.setState({\n          friends: result\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }\n\n  render() {\n    const friendList = props => {\n      const data = this.state.friends.map(i => React.createElement(Link, {\n        to: '/profile/?userId=' + i.userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \" \", i.username)));\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default GetFriendList;","map":{"version":3,"sources":["/home/ruart/Desktop/SocialMedia100/client/src/Components/GetFriendList.js"],"names":["React","Component","Button","Link","withRouter","jwt_decode","GetFriendList","constructor","state","userId","friends","componentDidMount","localStorage","usertoken","token","decoded","setState","fetch","then","response","json","result","console","log","catch","e","render","friendList","props","data","map","i","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAqC;AACpCM,EAAAA,WAAW,GAAE;AACN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,CADC;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,QAAGC,YAAY,CAACC,SAAhB,EAA0B;AACxB,UAAIC,KAAK,GAAGF,YAAY,CAACC,SAAzB;AACA,UAAIE,OAAO,GAAGV,UAAU,CAACS,KAAD,CAAxB;AACA,WAAKE,QAAL,CAAc;AACVP,QAAAA,MAAM,EAAEM,OAAO,CAACN;AADN,OAAd;AAGAQ,MAAAA,KAAK,CAAC,+CAA6CF,OAAO,CAACN,MAAtD,CAAL,CACKS,IADL,CACWC,QAAD,IAAc;AAAE,eAAOA,QAAQ,CAACC,IAAT,EAAP;AAAwB,OADlD,EAEKF,IAFL,CAEWG,MAAD,IAAY;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAKL,QAAL,CAAc;AAACN,UAAAA,OAAO,EAAEW;AAAV,SAAd;AACH,OALL,EAMKG,KANL,CAMYC,CAAD,IAAO;AAAEH,QAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AAAe,OANnC;AAOD;AACF;;AAEDC,EAAAA,MAAM,GAAE;AACP,UAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,YAAMC,IAAI,GAAG,KAAKrB,KAAL,CAAWE,OAAX,CAAmBoB,GAAnB,CAAwBC,CAAD,IACnC,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAI,sBAAoBA,CAAC,CAACtB,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAMsB,CAAC,CAACC,QAAR,CADD,CADY,CAAb;AAKF,KANF;;AAOA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAIA;;AAtCgC;;AAwCrC,eAAe1B,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link, withRouter } from 'react-router-dom'\nimport jwt_decode from 'jwt-decode'\n\nclass GetFriendList extends Component{\n\tconstructor(){\n        super()\n        this.state = {\n            userId: 0,\n            friends: []        \n        }\n    }\n\n    componentDidMount(){\n      if(localStorage.usertoken){\n        var token = localStorage.usertoken\n        var decoded = jwt_decode(token)\n        this.setState({\n            userId: decoded.userId\n        })\n        fetch('http://localhost:3000/get-friends/?userId='+decoded.userId)\n            .then((response) => { return response.json() })\n            .then((result) => {\n                console.log(result)\n                this.setState({friends: result})\n            })\n            .catch((e) => { console.log(e)});\n      }\n    }\n\n    render(){\n    \tconst friendList = (props) => {\n\t        const data = this.state.friends.map((i) => (\n\t        \t<Link to = {'/profile/?userId='+i.userId}>\n\t        \t\t<td> {i.username}</td>\n\t        \t</Link>\n\t        ))\n\t     }\n    \treturn(\n    \t\t<div>\n    \t\t</div>\n    \t)\n    }\n}\nexport default GetFriendList;"]},"metadata":{},"sourceType":"module"}