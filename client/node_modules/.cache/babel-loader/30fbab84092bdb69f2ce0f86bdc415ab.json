{"ast":null,"code":"var _jsxFileName = \"/home/ruart/Desktop/SocialMedia100/client/src/Components/Profile.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n\nconst qs = require(\"query-string\");\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userId: 0,\n      username: '',\n      name: '',\n      email: ''\n    };\n  }\n\n  componentDidMount() {\n    var id = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true\n    }).userId;\n    console.log(id);\n\n    if (localStorage.usertoken) {\n      var token = localStorage.usertoken;\n      var decoded = jwt_decode(token);\n\n      if (decoded.userId == id) {\n        this.setState({\n          userId: decoded.userId,\n          username: decoded.username,\n          name: decoded.name,\n          email: decoded.email\n        });\n      } else {\n        fetch('http://localhost:3000/get-user/?userId=' + id).then(response => {\n          return response.json();\n        }).then(res => {\n          console.log(result);\n          this.setState({\n            userId: id,\n            username: res.result[0].username,\n            name: res.result[0].name,\n            email: res.result[0].email\n          });\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    } else {\n      fetch('http://localhost:3000/get-user/?userId=' + id).then(response => {\n        return response.json();\n      }).then(res => {\n        console.log(result);\n        this.setState({\n          userId: id,\n          username: res.result[0].username,\n          name: res.result[0].name,\n          email: res.result[0].email\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"pdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"ptable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.username), React.createElement(\"tr\", {\n      className: \"ptr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.name)), React.createElement(\"tr\", {\n      className: \"ptr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.email)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      className: \"ptr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/home/ruart/Desktop/SocialMedia100/client/src/Components/Profile.js"],"names":["React","Component","Link","jwt_decode","qs","require","Profile","constructor","state","userId","username","name","email","componentDidMount","id","parse","props","location","search","ignoreQueryPrefix","console","log","localStorage","usertoken","token","decoded","setState","fetch","then","response","json","res","result","catch","e","render"],"mappings":"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","sourcesContent":["import React, {Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport jwt_decode from 'jwt-decode'\nconst qs = require(\"query-string\")\n\nclass Profile extends Component {\n    constructor() {\n        super()\n        this.state = {\n            userId: 0,\n            username: '',\n            name: '',\n            email: ''\n        }\n    }\n\n    componentDidMount () {\n        var id = qs.parse(this.props.location.search, {ignoreQueryPrefix: true}).userId\n        console.log(id)\n            if(localStorage.usertoken){\n                var token = localStorage.usertoken\n                var decoded = jwt_decode(token)\n                if(decoded.userId == id){\n                    this.setState({\n                        userId: decoded.userId,\n                        username: decoded.username,\n                        name: decoded.name,\n                        email: decoded.email\n                    })\n                }else{\n                    fetch('http://localhost:3000/get-user/?userId='+id)\n                    .then((response) => { return response.json() })\n                    .then((res) => {\n                        console.log(result)\n                        this.setState({\n                            userId: id,\n                            username: res.result[0].username,\n                            name: res.result[0].name,\n                            email: res.result[0].email\n                        })\n                    })\n                    .catch((e) => { console.log(e)});        \n                    }\n            }else{\n                fetch('http://localhost:3000/get-user/?userId='+id)\n                    .then((response) => { return response.json() })\n                    .then((res) => {\n                        console.log(result)\n                        this.setState({\n                            userId: id,\n                            username: res.result[0].username,\n                            name: res.result[0].name,\n                            email: res.result[0].email\n                        })\n                    })\n                    .catch((e) => { console.log(e)});\n                \n            }\n    }\n\n    render () { \n        return ( \n            <div className=\"pdiv\">\n                    <table className=\"ptable\">\n                    <tr>{this.state.username}</tr>\n                        <tr className=\"ptr\">\n                            <td>{this.state.name}</td>\n                        </tr>\n                        <tr className=\"ptr\">\n                            <td>{this.state.email}</td>\n                        </tr>\n                        <tr><td><br/></td></tr>\n                        <tr className=\"ptr\">\n                        </tr>\n                    </table>\n            </div>\n        )\n    }\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}