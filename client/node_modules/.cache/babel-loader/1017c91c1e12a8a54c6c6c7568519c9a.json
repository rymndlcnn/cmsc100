{"ast":null,"code":"var _jsxFileName = \"/home/michael/Desktop/SocialMedia100/client/src/Components/AddComment.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode'; // import './CSS/AddComment.css'\n\nclass AddComment extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userId: 0,\n      comment: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      comment: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const comment = {\n      postId: this.props.postId,\n      userId: this.props.userId,\n      comment: this.state.comment\n    };\n    fetch('http://localhost:3000/add-comment', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(comment)\n    }).then(response => response.json()).then(body => {\n      if (body.success) {\n        window.location.reload();\n      } else {\n        alert('Failed to post');\n      }\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"commentSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Comment \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      comment: this.state.comment,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      class: \"commentButton\",\n      type: \"submit\",\n      value: \"Post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AddComment;","map":{"version":3,"sources":["/home/michael/Desktop/SocialMedia100/client/src/Components/AddComment.js"],"names":["React","Component","Button","Link","withRouter","jwt_decode","AddComment","constructor","state","userId","comment","handleChange","bind","handleSubmit","event","setState","target","value","postId","props","fetch","method","headers","body","JSON","stringify","then","response","json","success","window","location","reload","alert","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,MAAMC,UAAN,SAAyBL,SAAzB,CAAkC;AACjCM,EAAAA,WAAW,GAAE;AACN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,CADC;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AAACL,MAAAA,OAAO,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAAvB,KAAd;AACD;;AACHJ,EAAAA,YAAY,CAACC,KAAD,EAAO;AACf,UAAMJ,OAAO,GAAG;AACZQ,MAAAA,MAAM,EAAC,KAAKC,KAAL,CAAWD,MADN;AAEZT,MAAAA,MAAM,EAAE,KAAKU,KAAL,CAAWV,MAFP;AAGZC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE;AAHR,KAAhB;AAKAU,IAAAA,KAAK,CAAC,mCAAD,EACH;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFX;AAKEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,OAAf;AALR,KADG,CAAL,CAQGgB,IARH,CAQQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARpB,EASGF,IATH,CASQH,IAAI,IAAI;AACZ,UAAGA,IAAI,CAACM,OAAR,EAAgB;AACZC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OAFD,MAEK;AACDC,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACH;AACF,KAfH;AAgBEnB,IAAAA,KAAK,CAACoB,cAAN;AACL;;AAGDC,EAAAA,MAAM,GAAE;AACP,WACC;AAAM,MAAA,QAAQ,EAAE,KAAKtB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU;AAAO,MAAA,KAAK,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ,EAEI;AAAU,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWE,OAA9B;AAAuC,MAAA,QAAQ,EAAE,KAAKC,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADV,EAKU;AAAO,MAAA,KAAK,EAAC,eAAb;AAA6B,MAAA,IAAI,EAAC,QAAlC;AAA2C,MAAA,KAAK,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALV,CADD;AASA;;AAlD6B;;AAoDlC,eAAeL,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link, withRouter } from 'react-router-dom'\nimport jwt_decode from 'jwt-decode'\n// import './CSS/AddComment.css'\nclass AddComment extends Component{\n\tconstructor(){\n        super()\n        this.state = {\n            userId: 0,\n            comment: \"\"        \n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState({comment: event.target.value});\n      }\n    handleSubmit(event){\n        const comment = {\n            postId:this.props.postId,\n            userId: this.props.userId,\n            comment: this.state.comment\n        }\n        fetch('http://localhost:3000/add-comment',\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(comment)\n          })\n          .then(response => response.json())\n          .then(body => {\n            if(body.success){\n                window.location.reload()\n            }else{ \n                alert('Failed to post') \n            }\n          })\n          event.preventDefault()\n    }\n\n\n    render(){\n    \treturn(\n    \t\t<form onSubmit={this.handleSubmit}>\n                <label class=\"commentSection\">\n                    Comment <br/> \n                    <textarea comment={this.state.comment} onChange={this.handleChange} />\n                </label>\n                <input class=\"commentButton\" type=\"submit\" value=\"Post\" />\n            </form>\n    \t)\n    }\n}\nexport default AddComment;"]},"metadata":{},"sourceType":"module"}