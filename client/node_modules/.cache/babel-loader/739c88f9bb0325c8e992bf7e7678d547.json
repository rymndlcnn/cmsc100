{"ast":null,"code":"var _jsxFileName = \"/home/ruart/Desktop/SocialMedia100/client/src/Components/GetPosts.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n\nclass GetPosts extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userId: 0,\n      posts: []\n    };\n    this.getPost = this.getPost.bind(this);\n  }\n\n  getPost(userId) {\n    fetch('http://localhost:3000/get-posts/?userId=' + userId).then(response => {\n      return response.json();\n    }).then(res => {\n      console.log(res.result);\n      this.setState({\n        posts: res.result\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  componentDidMount() {\n    const post = {\n      userId: this.props.userId\n    };\n    fetch('http://localhost:3000/get-posts/?userId=' + this.props.value).then(response => {\n      return response.json();\n    }).then(res => {\n      console.log(res.result);\n      this.setState({\n        posts: res.result\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const FriendList = () => {\n      const options = this.state.posts.map(i => React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, i.content));\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, options);\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(FriendList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default GetPosts;","map":{"version":3,"sources":["/home/ruart/Desktop/SocialMedia100/client/src/Components/GetPosts.js"],"names":["React","Component","Button","Link","withRouter","jwt_decode","GetPosts","constructor","state","userId","posts","getPost","bind","fetch","then","response","json","res","console","log","result","setState","catch","e","componentDidMount","post","props","value","render","FriendList","options","map","i","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAgC;AAC/BM,EAAAA,WAAW,GAAE;AACN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,CADC;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACH;;AAEDD,EAAAA,OAAO,CAACF,MAAD,EAAQ;AACdI,IAAAA,KAAK,CAAC,6CAA2CJ,MAA5C,CAAL,CACQK,IADR,CACcC,QAAD,IAAc;AAAE,aAAOA,QAAQ,CAACC,IAAT,EAAP;AAAwB,KADrD,EAEQF,IAFR,CAEcG,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA,KAAK,EAAEO,GAAG,CAACG;AAAZ,OAAd;AACH,KALR,EAMQE,KANR,CAMeC,CAAD,IAAO;AAAEL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AAAe,KANtC;AAOA;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,IAAI,GAAG;AACPhB,MAAAA,MAAM,EAAE,KAAKiB,KAAL,CAAWjB;AADZ,KAAb;AAGEI,IAAAA,KAAK,CAAC,6CAA2C,KAAKa,KAAL,CAAWC,KAAvD,CAAL,CACKb,IADL,CACWC,QAAD,IAAc;AAAE,aAAOA,QAAQ,CAACC,IAAT,EAAP;AAAwB,KADlD,EAEKF,IAFL,CAEWG,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA,KAAK,EAAEO,GAAG,CAACG;AAAZ,OAAd;AACH,KALL,EAMKE,KANL,CAMYC,CAAD,IAAO;AAAEL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AAAe,KANnC;AAQH;;AAEDK,EAAAA,MAAM,GAAE;AAGP,UAAMC,UAAU,GAAG,MAAM;AACxB,YAAMC,OAAO,GAAG,KAAKtB,KAAL,CAAWE,KAAX,CAAiBqB,GAAjB,CAAsBC,CAAD,IAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,CAAC,CAACC,OAAP,CADW,CAAhB;AAGG,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,OAAL,CAAP;AACF,KALF;;AAMA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AAKA;;AAhD2B;;AAkDhC,eAAexB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link, withRouter } from 'react-router-dom'\nimport jwt_decode from 'jwt-decode'\n\nclass GetPosts extends Component{\n\tconstructor(){\n        super()\n        this.state = {\n            userId: 0,\n            posts: []        \n        }\n        this.getPost = this.getPost.bind(this)\n    }\n\n    getPost(userId){\n    \tfetch('http://localhost:3000/get-posts/?userId='+userId)\n            .then((response) => { return response.json() })\n            .then((res) => {\n                console.log(res.result)\n                this.setState({posts: res.result})\n            })\n            .catch((e) => { console.log(e)});\n    }\n\n    componentDidMount(){\n      const post = {\n            userId: this.props.userId,\n        }\n        fetch('http://localhost:3000/get-posts/?userId='+this.props.value)\n            .then((response) => { return response.json() })\n            .then((res) => {\n                console.log(res.result)\n                this.setState({posts: res.result})\n            })\n            .catch((e) => { console.log(e)});\n      \n    }\n\n    render(){\n\t     \n\t     \n    \tconst FriendList = () => {\n    \t\tconst options = this.state.posts.map((i) => (\n        \t\t\t<td>{i.content}</td>\n\t        ))\n\t        return <ul>{options}</ul>\n\t     }\n    \treturn(\n    \t\t<div>\n    \t\t\t<FriendList/>\n    \t\t</div>\n    \t)\n    }\n}\nexport default GetPosts;"]},"metadata":{},"sourceType":"module"}