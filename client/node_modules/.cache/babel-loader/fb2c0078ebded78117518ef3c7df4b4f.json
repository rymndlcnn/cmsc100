{"ast":null,"code":"var _jsxFileName = \"/home/ruart/Desktop/SocialMedia100/client/src/Components/Profile.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport GetFriendList from './GetFriendList.js';\nimport GetPosts from './GetPosts.js';\nimport AddPost from './AddPost.js';\n\nconst qs = require(\"query-string\");\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userId: 0,\n      username: '',\n      name: '',\n      email: '',\n      posts: [],\n      requests: []\n    };\n    this.sendFriendRequest = this.sendFriendRequest.bind(this);\n    this.showRequests = this.showRequests.bind(this);\n    this.addFriend = this.addFriend.bind(this);\n    this.rejectFriend = this.rejectFriend.bind(this);\n  }\n\n  addFriend() {\n    const friend = {\n      userId: localStorage.userId,\n      friendId: friendId\n    };\n    fetch('http://localhost:3000/send-friend-request', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(request)\n    }).then(response => response.json()).then(body => {\n      if (body.success) {\n        alert(\"Friend request sent\");\n      } else {\n        alert('Failed to post');\n      }\n    });\n  }\n\n  rejectFriend() {}\n\n  showRequests() {\n    fetch('http://localhost:3000/get-friend-request/?userId=' + localStorage.userId).then(response => {\n      return response.json();\n    }).then(res => {\n      this.setState({\n        requests: res.result\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  sendFriendRequest(friendId) {\n    const request = {\n      userId: localStorage.userId,\n      friendId: friendId\n    };\n    fetch('http://localhost:3000/send-friend-request', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(request)\n    }).then(response => response.json()).then(body => {\n      if (body.success) {\n        alert(\"Friend request sent\");\n      } else {\n        alert('Failed to post');\n      }\n    });\n  }\n\n  componentDidMount() {\n    var id = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true\n    }).userId;\n\n    if (localStorage.usertoken) {\n      var token = localStorage.usertoken;\n      var decoded = jwt_decode(token);\n\n      if (decoded.userId === id) {\n        this.setState({\n          userId: decoded.userId,\n          username: decoded.username,\n          name: decoded.name,\n          email: decoded.email\n        });\n      } else {\n        fetch('http://localhost:3000/get-user/?userId=' + id).then(response => {\n          return response.json();\n        }).then(res => {\n          this.setState({\n            userId: id,\n            username: res.result[0].username,\n            name: res.result[0].name,\n            email: res.result[0].email\n          });\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    } else {\n      alert(\"Login to access page\");\n      this.props.history.push(\"/\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    window.location.reload();\n  }\n\n  render() {\n    var id = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true\n    }).userId;\n\n    const RequestList = () => {\n      const options = this.state.requests.map(i => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, i.username), React.createElement(Button, {\n        onClick: () => this.addFriend(i.userId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Accept\"), React.createElement(Button, {\n        onClick: () => this.rejectFriend(i.userId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Reject\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))));\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, options);\n    };\n\n    return React.createElement(\"div\", {\n      className: \"pdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"ptable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.state.username), React.createElement(\"tr\", {\n      className: \"ptr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.name)), React.createElement(\"tr\", {\n      className: \"ptr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.state.email)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      className: \"ptr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), this.state.userId !== localStorage.userId ? React.createElement(Button, {\n      onClick: () => this.sendFriendRequest(this.state.userId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Friend Request\") : \"\", this.state.userId == localStorage.userId ? React.createElement(Button, {\n      onClick: () => this.showRequests(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Show Friend Requests\") : \"\", React.createElement(RequestList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(GetPosts, {\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(AddPost, {\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/home/ruart/Desktop/SocialMedia100/client/src/Components/Profile.js"],"names":["React","Component","Button","Link","jwt_decode","GetFriendList","GetPosts","AddPost","qs","require","Profile","constructor","state","userId","username","name","email","posts","requests","sendFriendRequest","bind","showRequests","addFriend","rejectFriend","friend","localStorage","friendId","fetch","method","headers","body","JSON","stringify","request","then","response","json","success","alert","res","setState","result","catch","e","console","log","componentDidMount","id","parse","props","location","search","ignoreQueryPrefix","usertoken","token","decoded","history","push","componentWillReceiveProps","nextProps","window","reload","render","RequestList","options","map","i"],"mappings":"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","sourcesContent":["import React, {Component } from 'react'\nimport { Button } from 'react-bootstrap';\nimport {Link} from 'react-router-dom'\nimport jwt_decode from 'jwt-decode'\nimport GetFriendList from './GetFriendList.js'\nimport GetPosts from './GetPosts.js'\nimport AddPost from './AddPost.js'\n\nconst qs = require(\"query-string\")\n\n\nclass Profile extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            userId: 0,\n            username: '',\n            name: '',\n            email: '',\n            posts: [],\n            requests: []\n        }\n        this.sendFriendRequest = this.sendFriendRequest.bind(this)\n        this.showRequests = this.showRequests.bind(this)\n        this.addFriend = this.addFriend.bind(this)\n        this.rejectFriend = this.rejectFriend.bind(this)\n    }\n\n    addFriend(){\n        const friend = {\n            userId: localStorage.userId,\n            friendId: friendId\n        }\n        fetch('http://localhost:3000/send-friend-request',\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request)\n          })\n          .then(response => response.json())\n          .then(body => {\n            if(body.success){\n                alert(\"Friend request sent\")\n            }else{ \n                alert('Failed to post') \n            }\n          })\n    }\n\n    rejectFriend(){\n\n    }\n\n    showRequests(){\n        fetch('http://localhost:3000/get-friend-request/?userId='+localStorage.userId)\n        .then((response) => { return response.json() })\n        .then((res) => {\n            this.setState({\n                requests: res.result\n            })\n        })\n        .catch((e) => { console.log(e)});\n    }\n\n    sendFriendRequest(friendId){\n        const request = {\n            userId: localStorage.userId,\n            friendId: friendId\n        }\n        fetch('http://localhost:3000/send-friend-request',\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(request)\n          })\n          .then(response => response.json())\n          .then(body => {\n            if(body.success){\n                alert(\"Friend request sent\")\n            }else{ \n                alert('Failed to post') \n            }\n          })\n    }\n\n    componentDidMount () {\n        var id = qs.parse(this.props.location.search, {ignoreQueryPrefix: true}).userId\n            if(localStorage.usertoken){\n                var token = localStorage.usertoken\n                var decoded = jwt_decode(token)\n                if(decoded.userId === id){\n                    this.setState({\n                        userId: decoded.userId,\n                        username: decoded.username,\n                        name: decoded.name,\n                        email: decoded.email\n                    })\n                    \n                }else{\n                    fetch('http://localhost:3000/get-user/?userId='+id)\n                    .then((response) => { return response.json() })\n                    .then((res) => {\n                        this.setState({\n                            userId: id,\n                            username: res.result[0].username,\n                            name: res.result[0].name,\n                            email: res.result[0].email\n                        })\n                    })\n                    .catch((e) => { console.log(e)});        \n                }\n            }else{\n                alert(\"Login to access page\")\n                this.props.history.push(`/`)\n\n            }\n    }\n\n    componentWillReceiveProps(nextProps){\n           window.location.reload()\n    }\n\n\n    render () { \n        var id = qs.parse(this.props.location.search, {ignoreQueryPrefix: true}).userId\n        const RequestList = () => {\n            const options = this.state.requests.map((i) => (\n                <div>   \n                    <ul>\n                        \n                            <li>{i.username}</li>    \n                            <Button onClick = {() => this.addFriend(i.userId)}>Accept</Button> \n                            <Button onClick = {() => this.rejectFriend(i.userId)}>Reject</Button>\n                        <br/>\n                        \n                    </ul>\n                </div>    \n            ))\n            return <ul>{options}</ul>\n         }\n        return ( \n            <div className=\"pdiv\">\n                    <table className=\"ptable\">\n                    <tr>{this.state.username}</tr>\n                        <tr className=\"ptr\">\n                            <td>{this.state.name}</td>\n                        </tr>\n                        <tr className=\"ptr\">\n                            <td>{this.state.email}</td>\n                        </tr>\n                        <tr><td><br/></td></tr>\n                        <tr className=\"ptr\">\n                        </tr>\n                    </table>\n                    {/*<GetFriendList/>*/}\n                    {this.state.userId !== localStorage.userId ? <Button onClick = {() => this.sendFriendRequest(this.state.userId)}>Friend Request</Button>: \"\"}\n\n                    {this.state.userId == localStorage.userId ? <Button onClick = {() => this.showRequests()}>Show Friend Requests</Button>\n                    : \"\"}\n                    <RequestList/>\n                    <GetPosts id = {id}/>\n                    <AddPost id = {id}/>\n            </div>\n        )\n    }\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}